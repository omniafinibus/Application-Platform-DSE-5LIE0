import "Task.poosl"

process class Task5_6 extends Task
ports 
	In1_F4_T2, 
	In2_F5_T2, 
	Out1_F9_T9,
	Out2_F10_T9

messages 
	Control!MappedTo(String), 

	In1_F4_T2!InspectTokenAvailability(Integer), 
	In1_F4_T2!MappedTo(String), 
	In1_F4_T2!ReleaseRoom(),
	In1_F4_T2?TokensAvailable(), 
	
	In2_F5_T2!InspectTokenAvailability(Integer), 
	In2_F5_T2!MappedTo(String), 
	In2_F5_T2!ReleaseRoom(),
	In2_F5_T2?TokensAvailable(), 
	
	Out1_F9_T9!MappedTo(String), 
	Out1_F9_T9?ReservationSuccessful(), 
	Out1_F9_T9!ReserveRoom(Integer, Integer),
	Out1_F9_T9!WriteTokens(), 
	
	Out2_F10_T9!MappedTo(String), 
	Out2_F10_T9?ReservationSuccessful(), 
	Out2_F10_T9!ReserveRoom(Integer, Integer),
	Out2_F10_T9!WriteTokens()

variables

init 
	Initialise()()

methods

	CheckTokenAvailabilityForReads(Scenario: String)()
		In1_F4_T2!InspectTokenAvailability(1);
		In1_F4_T2?TokensAvailable;
		
		In2_F5_T2!InspectTokenAvailability(1);
		In2_F5_T2?TokensAvailable

	NotifyBuffersAboutMapping()()
		par
			In1_F4_T2!MappedTo(MapTo)
		and
			Out1_F9_T9!MappedTo(MapTo)
		and
			In2_F5_T2!MappedTo(MapTo)
		and
			Out2_F10_T9!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	PerformWrites(Scenario: String)()
		Out1_F9_T9!WriteTokens;
		Out2_F10_T9!WriteTokens

	ReleaseSpaceForReads(Scenario: String)()
		In1_F4_T2!ReleaseRoom;
		In2_F5_T2!ReleaseRoom

	ReserveSpaceForWrites(Scenario: String, Iteration: Integer)()
		Out1_F9_T9!ReserveRoom(1, Iteration);
		Out1_F9_T9?ReservationSuccessful;
		Out2_F10_T9!ReserveRoom(1, Iteration);
		Out2_F10_T9?ReservationSuccessful